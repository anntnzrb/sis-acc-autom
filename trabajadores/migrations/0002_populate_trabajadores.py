# Generated by Django 5.2.2 on 2025-06-28 23:27

from django.db import migrations
from django.core.files import File
from django.conf import settings
import os


def populate_trabajadores(apps, schema_editor):
    """Poblar la tabla trabajadores con datos de ejemplo."""
    Trabajador = apps.get_model('trabajadores', 'Trabajador')
    
    # Datos de ejemplo para 4 trabajadores
    trabajadores_data = [
        {
            'nombre': 'Carlos',
            'apellido': 'Rodríguez',
            'correo': 'carlos.rodriguez@carriacces.com',
            'cedula': '1234567890',
            'codigo_empleado': 'EMP001',
            'imagen_file': 'empleado_1.jpg'
        },
        {
            'nombre': 'María',
            'apellido': 'González',
            'correo': 'maria.gonzalez@carriacces.com',
            'cedula': '2345678901',
            'codigo_empleado': 'EMP002',
            'imagen_file': 'empleada_2.jpg'
        },
        {
            'nombre': 'Roberto',
            'apellido': 'Martínez',
            'correo': 'roberto.martinez@carriacces.com',
            'cedula': '3456789012',
            'codigo_empleado': 'EMP003',
            'imagen_file': 'empleado_3.jpg'
        },
        {
            'nombre': 'Ana',
            'apellido': 'López',
            'correo': 'ana.lopez@carriacces.com',
            'cedula': '4567890123',
            'codigo_empleado': 'EMP004',
            'imagen_file': 'empleada_4.jpg'
        }
    ]
    
    for data in trabajadores_data:
        imagen_file = data.pop('imagen_file')
        trabajador = Trabajador.objects.create(**data)
        
        # Asignar la imagen
        imagen_path = os.path.join(settings.MEDIA_ROOT, 'trabajadores', imagen_file)
        if os.path.exists(imagen_path):
            with open(imagen_path, 'rb') as f:
                trabajador.imagen.save(imagen_file, File(f), save=True)


def reverse_populate_trabajadores(apps, schema_editor):
    """Eliminar los trabajadores de ejemplo."""
    Trabajador = apps.get_model('trabajadores', 'Trabajador')
    codigos_empleados = ['EMP001', 'EMP002', 'EMP003', 'EMP004']
    Trabajador.objects.filter(codigo_empleado__in=codigos_empleados).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('trabajadores', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            populate_trabajadores,
            reverse_populate_trabajadores
        ),
    ]
