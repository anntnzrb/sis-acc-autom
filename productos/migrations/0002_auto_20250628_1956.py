# Generated by Django 5.2.2 on 2025-06-29 00:56

import os
import urllib.request
from decimal import Decimal
from django.db import migrations
from django.conf import settings


def populate_productos(apps, schema_editor):
    """Populate productos with mock data."""
    Producto = apps.get_model('productos', 'Producto')
    
    # Skip if products already exist
    if Producto.objects.exists():
        return
    
    # Mock product data for automotive accessories (CarriAcces)
    productos_data = [
        {
            'nombre': 'Llantas Deportivas Aleación',
            'descripcion': 'Llantas deportivas de aleación de 17 pulgadas, diseño moderno con acabado negro mate. Perfectas para mejorar el rendimiento y la estética de tu vehículo. Compatible con la mayoría de automóviles compactos y sedanes.',
            'precio': Decimal('450.00'),
            'iva': 15,
        },
        {
            'nombre': 'Sistema Audio Premium',
            'descripcion': 'Sistema de audio premium con tecnología Bluetooth 5.0, sonido surround y ecualizador digital. Incluye amplificador de 4 canales y subwoofer integrado. Fácil instalación con kit completo incluido.',
            'precio': Decimal('320.75'),
            'iva': 15,
        },
        {
            'nombre': 'Kit Iluminación LED Interior',
            'descripcion': 'Kit completo de iluminación LED para interior del vehículo. Incluye tiras LED RGB multicolor con control remoto, instalación plug-and-play. Crea ambiente personalizado con 16 millones de colores disponibles.',
            'precio': Decimal('89.99'),
            'iva': 0,
        }
    ]
    
    for producto_data in productos_data:
        Producto.objects.create(**producto_data)


def reverse_populate_productos(apps, schema_editor):
    """Remove populated productos."""
    Producto = apps.get_model('productos', 'Producto')
    Producto.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('productos', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_productos, reverse_populate_productos),
    ]
